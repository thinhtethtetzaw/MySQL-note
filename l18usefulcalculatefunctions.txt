=>USEFUL FUNCTIONS
*MYSQL Aggregate Functions
COUNT()
AVG()
SUM()
MIN()
MAX()


=>COUNT() Syntax
NOTE:: Return the number of rows in group, including rows with NULL values;
SELECT COUNT(columnname)
FROM tablename
WHERE condition;


=>SUM() Syntax
NOTE:: Return  the summation of all non-NULL values a set.
SELECT SUM(columnname)
FROM tablename
WHERE condition


=>MIN() Syntax
NOTE:: Return the lowest value in a set of non-NULL values.
SELECT MIN(columnname)
FROM tablename
WHERE condition;


=>MAX() Syntax
NOTE:: Return the highest value in a set of non-NULL values.
SELECT MIN(columnname)
FROM tablename
WHERE condition;


=>AVG() Syntax
NOTE:: Return the average of non-NULL values.
SELECT AVG(columnname)
FROM tablename
WHERE condition;

________________________________________________________

EXERCISE = COUNT()

SELECT COUNT(name) FROM employees;

SELECT COUNT(city) FROM employees
WHERE city = "yangon";

SELECT COUNT(employeeid) FROM employees 
WHERE salary > 500000;

SELECT COUNT(age)
FROM employees
WHERE age > 30;


________________________________________________________

EXERCISE = SUM()

SELECT SUM(salary) FROM employees;

SELECT SUM(salary)
FROM employees
WHERE city="mandalay";


________________________________________________________

EXERCISE = MIN()

EXERCISE = MIN()
SELECT * FROM employees;

SELECT MIN(salary) FROM employees;

SELECT MIN(age) FROM employees;

SELECT MIN(salary)
FROM employees
WHERE age > 30;

SELECT COUNT(*),MIN(salary)
FROM employees
WHERE age > 30;


_________________________________________________________

EXERCISE = MAX()

SELECT * FROM employees;

SELECT MAX(salary) FROM employees;

SELECT MAX(age) FROM employees;

SELECT MAX(salary)
FROM employees
WHERE age > 30;

SELECT COUNT(*),MAX(salary)
FROM employees
WHERE age > 30;

SELECT COUNT(*),MAX(age)
FROM employees
WHERE age > 30;

*error
SELECT MAX(salary),name FROM employees;


SELECT * FROM employees
WHERE salary = 900000;

SELECT name,salary,city FROM employees
WHERE salary = (SELECT MAX(salary) FROM employees);

SELECT * FROM employees
WHERE salary = (SELECT MAX(salary) FROM employees);

________________________________________________________

EXERCISE = AVG()

SELECT * FROM employees;

SELECT AVG(salary) FROM employees;

SELECT SUM(salary)
FROM employees
WHERE age > 30;

SELECT AVG(salary)
FROM employees
WHERE age > 30;

____________________________________________________

jan9

=>IF() Function
=Syntax
IF(condition,true,false);

SELECT IF(100 > 20,'TRUE','FALSE');
SELECT IF(100 < 20,'TRUE','FALSE');

SELECT * FROM employees;

SELECT name,age,salary,
	IF(age >= 35,"Elder","Young") AS 'age verify'
FROM employees;

_______________________________

=>TRUNCATE() Function
=Syntax
TRUNCATE(name,decimals);

*result = 123.35 (shae ko 1 ma toe buu)
SELECT TRUNCATE(123.356,2);


SELECT * FROM items;

SELECT name,price,
	TRUNCATE(price,1)
FROM items;

SELECT name,price,
	TRUNCATE(price,0) AS 'integer'
FROM items;

_________________________________

=>FLOOR() Function
FLOOR(number);

*result = 123
SELECT FLOOR(123.342);
SELECT FLOOR(123.678);
SELECT FLOOR(123);

SELECT * FROM items;

SELECT name,price,
	FLOOR(price)
FROM items;

_________________________________

=>ROUND() Function (toe tint mha toe dl)
ROUND(number,decimals);

*result = 123.342
SELECT TRUNCATE(123.342,3);

*result = 123.4
SELECT TRUNCATE(123.356,1);


SELECT * FROM items;

SELECT name,price,
	ROUND(price,0) AS 'integer'
FROM items;

_________________________________

=>CEIL() / CEILING() Function
CEIL(number);
CEILING(number);


*result = 124
SELECT CEIL(123.342);
SELECT CEILING(123.678);

*result = 123
SELECT CEIL(123);

SELECT * FROM items;

SELECT name,price,
	CEIL(price)
FROM items;

_________________________________

=>ABS() Function
ABS(number);

*result= 123.342
SELECT ABS(-123.342);

_________________________________

=>SQRT() Function
SQRT(number);

*result= 7
SELECT SQRT(49);

*result= 9
SELECT SQRT(81);

_________________________________

=>POW() Function
POW(base,power);

*result = 100
SELECT POW(10,2);

*result = 64
SELECT POW(4,3);

*result = 1216
SELECT POW(6,3);

_________________________________

=>SIGN() Function
SIGN(number);

number > 0 return 1
number < 0 return -1
number = 0 return 0

*result = 1
SELECT SIGN(500);

*result = -1
SELECT SIGN(-500);

*result = 0
SELECT SIGN(0);